version: 2.1

orbs: 
  slack: circleci/slack@4.5.1

commands:

  ci-on-fail:
    description: "Failure Sequence on Failed Build, Test, or Analyze Steps"
    parameters:
      id:
        type: string
        default: << pipeline.id >>
      pull-url:
        type: string
        default: << pipeline.project.git_url >>
    steps:
      - run:
          name: Slack Failure Echo Message
          command: |
            echo "Pipeline ID Failure: << parameters.id >>"
            echo "Git Pull URL Failure: << parameters.pull-url >>"
          when: on_fail
      - slack/notify:
          event: fail
          template: basic_fail_1

jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Frontend build
          command: |
            # Your code here
            cd frontend
            npm install
            npm run build
      - ci-on-fail
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Backend build
          command: |
            # Your code here
            cd backend
            npm install
            npm run build
      - ci-on-fail
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build

  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Frontend Unit Tests
          command: |
            # Your code here
            cd frontend
            npm install
            npm run test
      - ci-on-fail
                
  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Backend Unit Tests
          command: |
            # Your code here
            cd backend
            npm install
            npm run test
      - ci-on-fail

  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Frontend Security Scan
          command: |
            cd frontend
            npm install
            npm audit fix --audit-level=critical --force
            npm audit --audit-level=critical
      - ci-on-fail

  scan-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Backend Security Scan
          command: |
            cd frontend
            npm install
            npm audit fix --audit-level=critical --force
            npm audit --audit-level=critical
      - ci-on-fail

workflows:
  default:
    jobs:
      - build-frontend:
          context: slack-context
      - build-backend:
          context: slack-context
      - test-frontend:
          context: slack-context
          requires:
            - build-frontend
      - test-backend:
          context: slack-context
          requires:
            - build-backend
      - scan-frontend:
          context: slack-context
          requires:
            - test-frontend
      - scan-backend:
          context: slack-context
          requires:
            - test-backend
